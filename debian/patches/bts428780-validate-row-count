diff a/doc/rrdcreate.pod b/doc/rrdcreate.pod
--- a/doc/rrdcreate.pod
+++ b/doc/rrdcreate.pod
@@ -184,6 +184,7 @@ I<steps> defines how many of these I<primary data points> are used to build
 a I<consolidated data point> which then goes into the archive.
 
 I<rows> defines how many generations of data values are kept in an B<RRA>.
+Obviously, this has to be greater than zero.
 
 =back
 
diff a/src/rrd_create.c b/src/rrd_create.c
--- a/src/rrd_create.c
+++ b/src/rrd_create.c
@@ -207,6 +207,7 @@ rrd_create_r(const char *filename,
             char *argvcopy;
 	    char *tokptr;
 	    size_t old_size = sizeof(rra_def_t)*(rrd.stat_head->rra_cnt);
+	    int row_cnt;
 	    if((rrd.rra_def = rrd_realloc(rrd.rra_def,
                                           old_size+sizeof(rra_def_t)))==NULL)
 	    {
@@ -269,7 +270,10 @@ rrd_create_r(const char *filename,
                     case CF_SEASONAL:
                     case CF_DEVPREDICT:
                     case CF_FAILURES:
-                        rrd.rra_def[rrd.stat_head->rra_cnt].row_cnt = atoi(token);
+                        row_cnt = atoi(token);
+                        if (row_cnt <= 0)
+                            rrd_set_error("Invalid row count: %i", row_cnt);
+                        rrd.rra_def[rrd.stat_head->rra_cnt].row_cnt = row_cnt;
                         break;
                     default:
                         rrd.rra_def[rrd.stat_head->rra_cnt].par[RRA_cdp_xff_val].u_val = atof(token);
@@ -350,7 +354,10 @@ rrd_create_r(const char *filename,
                         rrd_set_error("Unexpected extra argument for consolidation function DEVPREDICT");
                         break;
                     default:
-                        rrd.rra_def[rrd.stat_head->rra_cnt].row_cnt = atoi(token);
+                        row_cnt = atoi(token);
+                        if (row_cnt <= 0)
+                            rrd_set_error("Invalid row count: %i", row_cnt);
+                        rrd.rra_def[rrd.stat_head->rra_cnt].row_cnt = row_cnt;
                         break;
                     }
                     break;
