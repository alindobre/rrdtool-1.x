#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

#we use quilt
include /usr/share/quilt/quilt.make


#library versions
LIB_version := $(shell grep '^librrd_la_LDFLAGS' src/Makefile.am | \
                           sed 's,^[^0-9]*,,g;s,\([0-9]*\):\([0-9]*\):\([0-9]*\),\1.\3.\2,g')
LIB_major := $(shell echo $(LIB_version) | sed 's,\..*,,g')
LIB_TH_version := $(shell grep '^librrd_th_la_LDFLAGS' src/Makefile.am | \
                           sed 's,^[^0-9]*,,g;s,\([0-9]*\):\([0-9]*\):\([0-9]*\),\1.\3.\2,g')
LIB_TH_major := $(shell echo $(LIB_TH_version) | sed 's,\..*,,g')



#Ruby versions to build for
RUBY_VERS := 1.8 1.9
RUBY_DEFAULT_VERS := 1.8

#Python versions to build for. The work-around-doko way.
PY_VERS := $(shell set -e; \
                   for py in `pysupport-parseversions debian/pyversions`; do \
                       if [ -x /usr/bin/python$$py ]; then echo $$py; fi;    \
                   done)

#let's help configure to figure out our host/build system
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
  CONFFLAGS += --build $(DEB_HOST_GNU_TYPE)
else
  CONFFLAGS += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

#we build the bindings manually from debian/rules
CONFFLAGS += --disable-python --disable-ruby

#set the right paths
CONFFLAGS += --prefix=/usr --docdir=/usr/share/doc/rrdtool

#install perl libs in vendor mode
CONFFLAGS += --with-perl-options=INSTALLDIRS=vendor




#let's take care of optimization + debug builds
CFLAGS += -Wall -g
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
        CFLAGS += -O0
else
        CFLAGS += -O2
endif

LDFLAGS="-Wl,-z,defs"

configure: config.status
config.status: $(QUILT_STAMPFN)

ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif

	LDFLAGS="$(LDFLAGS)"
	CFLAGS="$(CFLAGS)" \
	RRDDOCDIR=/usr/share/doc/rrdtool \
	  ./configure $(CONFFLAGS)

build: build-arch build-indep 

build-arch: build-arch-stamp $(PY_VERS:%=build-python%)
build-arch-stamp: config.status 

	#configure forgets to set TCL_INC_DIR.
	make TCL_INC_DIR=/usr/include/tcl
	#Fix library path to tcl bindings
	sed -i -e 's|lib/|lib/tcltk/rrdtool-tcl/|' bindings/tcl/pkgIndex.tcl
	touch $@

build-python%: build-arch-stamp
	set -e ;\
	 cd bindings/python ;\
	 BUILDLIBDIR=../../src/.libs LIBDIR=../../src/.libs python$* setup.py build
	touch $@

build-indep: build-arch-stamp
	#indep stuff is built in build-arch-stamp, too.

clean: clean-patched
clean-patched: unpatch $(PY_VERS:%=clean-python%)
	dh_testdir
	dh_testroot
	#sanity check if debian/control lists the right package name
	grep -q '^Package: librrd$(LIB_major)' debian/control

	[ ! -f Makefile ] || make distclean

ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	rm -f config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	rm -f config.guess
endif
	rm -f build-arch-stamp build-indep-stamp config.status install-common-stamp
	find . -name \*.pyc | xargs rm -f
	rm -rf bindings/python/build

	#clean what the Makefiles do not clean....
	rm -rf bindings/perl-piped/blib bindings/perl-shared/blib \
	       bindings/perl-piped/Makefile.old bindings/perl-shared/Makefile.old
	rm -f bindings/tcl/pkgIndex.tcl bindings/tcl/tclrrd*.so
	rm -f examples/cgi-demo.cgi

	dh_clean

clean-python%: unpatch
	set -e ;\
	 cd bindings/python ;\
	 python$* setup.py clean
	rm -f build-python$*


install: install-arch install-indep

install-indep: build-indep install-common-stamp
	#nothing to do

install-common-stamp: build-arch-stamp
	dh_testdir
	dh_testroot
	dh_clean -k

	make install DESTDIR=$(CURDIR)/debian/tmp
	dh_install --sourcedir=$(CURDIR)/debian/tmp

	touch $@

install-arch: install-common-stamp $(PY_VERS:%=install-python%)
	#build and install ruby
	set -e; \
	cd bindings/ruby ;\
	for rbv in $(RUBY_VERS); do \
	  ruby$$rbv extconf.rb ;\
	  make ;\
	  make install sitelibdir=$(CURDIR)/debian/librrd-ruby$$rbv`ruby$$rbv -r rbconfig -e 'print Config::CONFIG["rubylibdir"]'` \
	               sitearchdir=$(CURDIR)/debian/librrd-ruby$$rbv`ruby$$rbv -r rbconfig -e 'print Config::CONFIG["archdir"]'` ;\
	  make distclean ;\
	done

	dh_installexamples -s

install-python%: install-common-stamp
	dh_testdir
	dh_testroot
	set -e ;\
	 cd bindings/python ;\
	 python$* setup.py install --root=$(CURDIR)/debian/python-rrdtool


binary-indep: build-indep install-indep
	dh_testdir
	dh_testroot
	dh_link -plibrrd-ruby /usr/share/doc/librrd-ruby$(RUBY_DEFAULT_VERS) /usr/share/doc/librrd-ruby
	dh_link -plibrrd2-dev /usr/share/doc/librrd-dev /usr/share/doc/librrd2-dev
	dh_link -ppython-rrd /usr/share/doc/python-rrdtool /usr/share/doc/python-rrd
	dh_installchangelogs -i -Nlibrrd-ruby -Nlibrrd2-dev -Npython-rrd
	dh_installdocs -i -Nlibrrd-ruby -Nlibrrd2-dev -Npython-rrd
	dh_link -i -Nlibrrd-ruby -Nlibrrd2-dev -Npython-rrd
	echo 'rubydefault:Depends=librrd-ruby$(RUBY_DEFAULT_VERS)' >> debian/librrd-ruby.substvars
	dh_perl -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i
	

binary-arch: build-arch install-arch
	dh_testdir
	dh_testroot
	dh_installchangelogs -a CHANGES
	dh_installdocs -A CONTRIBUTORS
	dh_installdocs -a
#	dh_installexamples -a
	dh_pysupport -ppython-rrdtool
	dh_perl -a
	dh_installman -a
	dh_link -plibrrd-dev /usr/lib/librrd.so.$(LIB_version) /usr/lib/librrd.so
	dh_link -plibrrd-dev /usr/lib/librrd_th.so.$(LIB_TH_version) /usr/lib/librrd_th.so
	dh_link -plibrrd$(LIB_major) /usr/lib/librrd.so.$(LIB_version) /usr/lib/librrd.so.$(LIB_major)
	dh_link -plibrrd$(LIB_major) /usr/lib/librrd_th.so.$(LIB_TH_version) /usr/lib/librrd_th.so.$(LIB_TH_major)
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a


binary: binary-arch binary-indep
.PHONY: build clean configure \
        binary-indep binary-arch binary \
        install install-arch \
        install-python% clean-python% unpatch
