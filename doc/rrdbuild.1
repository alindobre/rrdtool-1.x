.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RRDBUILD 1"
.TH RRDBUILD 1 "2008-05-26" "1.3rc6" "rrdtool"
.SH "NAME"
rrdbuild \- Instructions for building RRDtool
.SH "OVERVIEW"
.IX Header "OVERVIEW"
If you downloaded the source of rrdtool you have to compile it. This
document will give some information on how this is done.
.PP
RRDtool relies on services of thrid part libraries. Some of these libraries
may already be installed on your system. You have to compile copies of the other
ones before you can build RRDtool.
.PP
This document will tell you about all the necessary steps to get going.
.PP
These instructions assume you are using a \fBbash\fR shell. If you use csh/tcsh,
then you can either type \fIbash\fR to switch to bash for the compilation or if
you know what you are doing just replace the export bits with
setenv.
.PP
We further assume that your copies of \fBtar\fR and \fBmake\fR are actually \fB\s-1GNU\s0
tar\fR and \fB\s-1GNU\s0 make\fR respectively. It could be that they are installed as
\&\fBgtar\fR and \fBgmake\fR on your system.
.SH "OPTIMISTIC BUILD"
.IX Header "OPTIMISTIC BUILD"
Before you start to build RRDtool, you have to decide two things:
.IP "1." 4
In which directory you want to build the software.
.IP "2." 4
Where you want to install the software.
.PP
Once you have decided. Save the two locations into environment variables.
.PP
.Vb 2
\& BUILD_DIR=/tmp/rrdbuild
\& INSTALL_DIR=/usr/local/rrdtool\-1.3rc6
.Ve
.PP
If your \fI/tmp\fR is mounted with the option noexec (\s-1RHEL\s0 seems todo that) you have to choose
a different directory!
.PP
Now make sure the \s-1BUILD_DIR\s0 exists and go there:
.PP
.Vb 2
\& mkdir \-p $BUILD_DIR
\& cd $BUILD_DIR
.Ve
.PP
Lets first assume you already have all the necessary libraries
pre\-installed. 
.PP
.Vb 4
\& wget http://oss.oetiker.ch/rrdtool/pub/rrdtool\-1.3rc6.tar.gz
\& gunzip \-c rrdtool\-1.3rc6.tar.gz | tar xf \-
\& cd rrdtool\-1.3rc6
\& ./configure \-\-prefix=$INSTALL_DIR && make && make install
.Ve
.PP
Ok, this was very optimistic. This try will probably have ended with
\&\fBconfigure\fR complaining about several missing libraries.
.SH "INSTALLING DEPENDENCIES"
.IX Header "INSTALLING DEPENDENCIES"
If your \s-1OS\s0 lets you install additional packages from a software repository,
you may get away with installing the missing packages. When the packages are
installed, run configure again and try to compile again. Below you find some
hints on getting your \s-1OS\s0 ready for the rrdtool compilation. Additions to
this list are welcome.
.Sh "OpenSolaris 2008.05"
.IX Subsection "OpenSolaris 2008.05"
Just add a compiler and the gnome development package:
.PP
.Vb 2
\& pkg install sunstudioexpress
\& pkg install SUNWgnome\-common\-devel
.Ve
.PP
There is a a problem with \fIcairo.pc\fR on opensolaris. It suggests that
xrender is required for compilation with cairo. This is not true and also
bad since opensolaris does not include an \fIxrender.pc\fR file. Use perl to
fix this:
.PP
.Vb 1
\& perl \-i~ \-p \-e 's/(Requires.*?)\es*xrender.*/$1/' /usr/lib/pkgconfig/cairo.pc
.Ve
.Sh "Debian / Ubuntu"
.IX Subsection "Debian / Ubuntu"
Use apt-get to make sure you have all that is required. A number
of packages will get added through dependencies.
.PP
.Vb 1
\& apt\-get install libpango1.0\-dev libxml2\-dev
.Ve
.SH "BUILDING DEPENDENCIES"
.IX Header "BUILDING DEPENDENCIES"
But again this may have been too optimistic still, and you actually have to
compile your own copies of some of the required libraries. Things like
libpng and zlib are pretty standard so you will probably have them on your
system anyway. Freetype, Fontinst, Cairo, Pango may be installed, but it is
possible that they are pretty old and thus don't live up to the
expectations, so you may want to compile their latest versions.
.PP
\fIBuild Tipps for \s-1AIX\s0\fR
.IX Subsection "Build Tipps for AIX"
.PP
If you are woking with \s-1AIX\s0, you may find the the \fB\-\-disable\-shared\fR option
will cause things to break for you. In that case you may have to install the
shared libraries into the rrdtool \s-1PREFIX\s0 and work with \fB\-\-disable\-static\fR
instead.
.PP
Another hint to get rrdtool working on \s-1AIX\s0 is to use the \s-1IBM\s0 \s-1XL\s0 C Compiler:
.PP
.Vb 2
\& export CC=/usr/vac/bin/cc
\& export PERLCC=$CC
.Ve
.PP
(Better instructions for \s-1AIX\s0 welcome!)
.Sh "Building Libraries"
.IX Subsection "Building Libraries"
In order to build the libraries you need a compiler on your system.
Unfortunately compilers are not all alike. This has an effect on the \s-1CFLAGS\s0
you want to set. The examples below are for the popular \s-1GCC\s0 compiler suite.
If you have an other compile you have to use the following settings:
.IP "Sun Forte" 4
.IX Item "Sun Forte"
.Vb 1
\& CFLAGS="\-xO3 \-kPIC"
.Ve
.Sp
.RS 4
Some libraries want to know where other libraries are. For this to work,
set the following environamen variable
.Sp
.Vb 2
\& export PKG_CONFIG_PATH=${INSTALL_DIR}/lib/pkgconfig
\& export PATH=$INSTALL_DIR/bin:$PATH
.Ve
.Sp
Since we are compiling libraries dynamically, you they must further know
where to find each other. This is done by setting an appropriate \s-1LDFLAG\s0.
Unfortunatly the syntax differs from system to system:
.IP "Solaris" 4
.IX Item "Solaris"
.Vb 1
\& export LDFLAGS=\-R${INSTALL_DIR}/lib
.Ve
.IP "Linux" 4
.IX Item "Linux"
.Vb 1
\& export LDFLAGS="\-Wl,\-\-rpath \-Wl,${INSTALL_DIR}/lib"
.Ve
.Sp
If you are on a 64bit platform, but would like to continue to use the rrd files created
on your old 32bit linux, you may be able 
.IP "\s-1HPUX\s0" 4
.IX Item "HPUX"
.Vb 1
\& export LDFLAGS="+b${INSTALL_DIR}/lib"
.Ve
.IP "\s-1AIX\s0" 4
.IX Item "AIX"
.Vb 1
\& export LDFLAGS="\-Wl,\-blibpath:${INSTALL_DIR}/lib"
.Ve
.RE
.RS 4
.Sp
If you have GNUmake installed and it is not called 'make',
then do
.Sp
.Vb 2
\& export MAKE=gmake
\& export GNUMAKE=gmake
.Ve
.Sp
otherwhise just do
.Sp
.Vb 1
\& export MAKE=make
.Ve
.RE
.IP "Building zlib" 4
.IX Item "Building zlib"
Chances are very high that you already have that on your system ... 
.Sp
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/zlib\-1.2.3.tar.gz
\& gunzip \-c zlib\-1.2.3.tar.gz | tar xf \-
\& cd zlib\-1.2.3
\& ./configure \-\-prefix=$INSTALL_DIR CFLAGS="\-O3 \-fPIC" \-\-shared
\& $MAKE
\& $MAKE install
.Ve
.IP "Building libpng" 4
.IX Item "Building libpng"
Libpng itself requires zlib to build, so we need to help a bit. If you
already have a copy of zlib on your system (which is very likley) you can
drop the settings of \s-1LDFLAGS\s0 and \s-1CPPFLAGS\s0. Note that the backslash (\e) at
the end of line 4 means that line 4 and line 5 are on one line.
.Sp
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/libpng\-1.2.18.tar.gz
\& gunzip \-c libpng\-1.2.18.tar.gz | tar xf \-
\& cd libpng\-1.2.10
\& env CFLAGS="\-O3 \-fPIC" ./configure \-\-prefix=$INSTALL_DIR
\& $MAKE
\& $MAKE install
.Ve
.IP "Building freetype" 4
.IX Item "Building freetype"
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/freetype\-2.3.5.tar.gz
\& gunzip \-c freetype\-2.3.5.tar.gz | tar xf \-
\& cd freetype\-2.3.5
\& ./configure \-\-prefix=$INSTALL_DIR CFLAGS="\-O3 \-fPIC"
\& $MAKE
\& $MAKE install
.Ve
.Sp
If you run into problems building freetype on Solaris, you may want to try to
add the following at the start the configure line:
.Sp
.Vb 1
\& env EGREP=egrep
.Ve
.IP "Building LibXML2" 4
.IX Item "Building LibXML2"
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/libxml2\-sources\-2.6.31.tar.gz
\& gunzip \-c libxml2\-sources\-2.6.32.tar.gz | tar xf \-
\& cd libxml2\-sources\-2.6.32
\& ./configure \-\-prefix=$INSTALL_DIR CFLAGS="\-O3 \-fPIC"
\& $MAKE
\& $MAKE install
.Ve
.IP "Building fontconfig" 4
.IX Item "Building fontconfig"
Note that fontconfig has a runtime configuration file in INSTALL_DIR/etc you
may want to adjust that so that fontconfig finds the fonts on your system.
Run the fc-cache program to build the fontconfig cache after changeing the
config file.
.Sp
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/fontconfig\-2.4.2.tar.gz
\& gunzip \-c fontconfig\-2.4.2.tar.gz   | tar xf \-
\& cd fontconfig\-2.4.2
\& ./configure \-\-prefix=$INSTALL_DIR CFLAGS="\-O3 \-fPIC"
\& $MAKE
\& $MAKE install
.Ve
.IP "Building Pixman" 4
.IX Item "Building Pixman"
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/pixman\-0.10.0.tar.gz
\& gunzip \-c pixman\-0.10.0.tar.gz  | tar xf \-
\& cd fontconfig\-2.4.2
\& ./configure \-\-prefix=$INSTALL_DIR CFLAGS="\-O3 \-fPIC"
\& $MAKE
\& $MAKE install
.Ve
.IP "Building Cairo" 4
.IX Item "Building Cairo"
.Vb 11
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/cairo\-1.6.4.tar.gz
\& gunzip \-c cairo\-1.4.10.tar.gz   | tar xf \-
\& cd cairo\-1.4.10
\& ./configure \-\-prefix=$INSTALL_DIR \e
\&    \-\-enable\-xlib=no \e
\&    \-\-enable\-xlib\-render=no \e
\&    \-\-enable\-win32=no \e
\&    CFLAGS="\-O3 \-fPIC"
\& $MAKE
\& $MAKE install
.Ve
.IP "Building Glib" 4
.IX Item "Building Glib"
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/glib\-2.15.4.tar.gz
\& gunzip \-c glib\-2.12.13.tar.gz  | tar xf \-
\& cd glib\-2.12.13
\& ./configure \-\-prefix=$INSTALL_DIR CFLAGS="\-O3 \-fPIC"
\& $MAKE
\& $MAKE install
.Ve
.IP "Building Pango" 4
.IX Item "Building Pango"
.Vb 7
\& cd $BUILD_DIR
\& wget http://oss.oetiker.ch/rrdtool/pub/libs/pango\-1.21.1.tar.gz
\& gunzip \-c pango\-1.21.1.tar.gz  | tar xf \-
\& cd pango\-1.21.1
\& ./configure \-\-prefix=$INSTALL_DIR CFLAGS="\-O3 \-fPIC" \-\-without\-x
\& $MAKE
\& $MAKE install
.Ve
.PP
Now all the dependent libraries are built and you can try again. This time
you tell configure where it should be looking for libraries and include
files. This is done via environment variables. Depending on the shell you
are running, the syntax for setting environment variables is different.
.PP
And finally try building again. We disable the python and tcl bindings
because it seems that a fair number of people have ill configured python and
tcl setups that would prevent rrdtool from building if they are included in
their current state.
.PP
.Vb 5
\& cd $BUILD_DIR/rrdtool\-1.3rc6
\& ./configure \-\-prefix=$INSTALL_DIR \-\-disable\-tcl \-\-disable\-python
\& $MAKE clean
\& $MAKE
\& $MAKE install
.Ve
.PP
\&\s-1SOLARIS\s0 \s-1HINT:\s0 if you want to build  the perl module for the native perl (the
one shipping with solaris) you will need the sun forte compiler installed on
your box or you have to hand-tune bindings/perl\-shared/Makefile while
building!
.PP
Now go to \fI$INSTALL_DIR\fR\fB/share/rrdtool/examples/\fR and run them to see if
your build has been successful.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tobias Oetiker <tobi@oetiker.ch>
